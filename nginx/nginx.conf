user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

# The http context for defining HTTP-specific configurations
http {
    # Log format and error logs (optional)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    client_max_body_size 100M;

    # HTTP Server block (port 80)
    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://client:3000/;  # Forward requests to the client
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to /api/ to the server container
        location /api/ {
            proxy_pass http://server:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }
    }

    # HTTPS Server block (port 443)
    server {
        listen 443 ssl;
        server_name _;

        # Path to the default self-signed SSL certificate and private key
        ssl_certificate /etc/nginx/ssl/selfsigned_example.crt;  # Path to default certificate
        ssl_certificate_key /etc/nginx/ssl/selfsigned_example.key;  # Path to default private key

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://client:3000/;  # Forward requests to the client
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to /api/ to the server container
        location /api/ {
            proxy_pass http://server:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }
    }
}
